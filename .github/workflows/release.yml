---
# Publish package on main branch if it's tagged with 'v*'

name: Release

# Controls when the action will run.
"on":
  # Triggers the workflow on push events but only for the master branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "release"
  release:
    name: Create Release
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: |
            3.10
            3.11
            3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch hatchling

      - name: Set version from tag
        run: |
          TARGET_VERSION="${GITHUB_REF#refs/tags/v}";
          CURRENT_VERSION=$(hatch version);
          if [ "${TARGET_VERSION}" != "${CURRENT_VERSION}" ]; then
            hatch version "${TARGET_VERSION}"
          fi

      - name: build documentation
        run: |
          hatch run docs:build

      - name: publish documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Build wheels and source tarball
        run: |
          hatch build

      - name: show temporary files
        run: >-
          ls -l

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          files: dist/*.whl
          draft: false
          prerelease: false

      - name: Publish to PyPI
        run: |
            hatch publish \
              --user="__token__" \
              --auth="${{ secrets.PYPI_API_TOKEN }}"
